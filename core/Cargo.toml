[package]
name = "service-util-core"
version.workspace = true
authors.workspace = true
edition.workspace = true

[dependencies]
async-backtrace.workspace = true
cfg-if.workspace = true
derivative.workspace = true
hyper.workspace = true
lazy_static.workspace = true
log.workspace = true
paste.workspace = true
pin-project-lite.workspace = true
thiserror.workspace = true
tracing.workspace = true

anyhow = { workspace = true, optional = true }
async-trait = { workspace = true, optional = true }
axum-05 = { workspace = true, optional = true }
axum-06 = { workspace = true, optional = true }
axum-core = { workspace = true, optional = true }
chrono = { workspace = true, optional = true }
color-eyre = { workspace = true, optional = true }
cookie = { workspace = true, optional = true }
concat-string = { workspace = true, optional = true }
data-encoding = { workspace = true, optional = true }
derive_more = { workspace = true, optional = true }
diesel = { workspace = true, optional = true }
diesel-util = { workspace = true, optional = true }
futures = { workspace = true, optional = true }
mongodb = { workspace = true, optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry-jaeger = { workspace = true, optional = true }
ring = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde_qs = { workspace = true, optional = true }
session-util = { workspace = true, optional = true }
tonic = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }
tower-layer = { workspace = true, optional = true }
tower-service = { workspace = true, optional = true }
tracing-error = { workspace = true, optional = true }
tracing-log = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
tracing-tree = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }

async-graphql-4 = { workspace = true, optional = true }
async-graphql-5 = { workspace = true, optional = true }
async-graphql-6 = { workspace = true, optional = true }

[features]
default = ["anyhow", "http1"]
anyhow = ["dep:anyhow", "diesel-util/anyhow"]
async-graphql-4 = ["dep:async-graphql-4", "diesel", "diesel-util", "diesel-util/async-graphql-4", "serde"]
async-graphql-5 = ["dep:async-graphql-5", "diesel", "diesel-util", "diesel-util/async-graphql-5", "serde"]
async-graphql-6 = ["dep:async-graphql-6", "diesel", "diesel-util", "diesel-util/async-graphql-6", "serde"]
axum-05 = ["dep:axum-05", "session-util/axum-core-02"]
axum-06 = ["dep:axum-06", "session-util/axum-core-03"]
client = ["async-trait", "concat-string", "futures", "hyper/client", "serde", "serde_json", "serde_qs", "trace"]
color-eyre = ["dep:color-eyre", "diesel-util/color-eyre"]
db = ["diesel", "diesel-util", "serde"]
grpc = ["tonic"]
http1 = ["hyper/http1"]
http2 = ["hyper/http2"]
log_error = []
max-allowed-request-body-size-lg = []
max-allowed-request-body-size-md = []
max-allowed-request-body-size-sm = []
max-allowed-request-body-size-xl = []
max-allowed-request-body-size-xxl = []
server = ["derive_more", "futures", "opentelemetry/rt-tokio", "serde", "serde_json", "session-util", "tokio", "tokio/macros", "tower", "tower/timeout", "trace", "uuid"]
trace = ["chrono", "opentelemetry", "opentelemetry-jaeger/rt-tokio", "tower-http", "tracing-error", "tracing-log", "tracing-opentelemetry", "tracing-subscriber", "tracing-tree", "uuid"]
